
@using PagedList
@using PagedList.Mvc
@model IPagedList<MwangiBlogApp.Models.BlogPost>

<!-- s-content-->
<div class="">
    <div class="">
        <img src="images/thumbs/single/standard/standard-1000.jpg"
             srcset="/images/thumbs/single/standard/standard-2000.jpg 2000w,
                                 /images/thumbs/single/standard/standard-1000.jpg 1000w,
                                 /images/thumbs/single/standard/standard-500.jpg 500w"
             sizes="(max-width: 2000px) 100vw, 2000px" alt="">
    </div>
</div>
<!-- featured
================================================== -->
<style>
    .abstract1{
        color: whitesmoke; 
        font-size: 40px;
    }

    .abstract2{
        color: whitesmoke; 
        font-size: 20px;
    }
</style>

<section class="s-featured">
    <div class="row">
        <div class="col-full">

            <div class="featured-slider featured" data-aos="zoom-in">


                @foreach (var item in Model)
                {
                    if (item.MediaUrl != null)
                    {
                        <div class="featured__slide">
                            <div class="entry">
                                <div class="entry__background" style="background-image:url('@Url.Content(item.MediaUrl)');"></div>
                                <div class="entry__content">
                                    <span class="entry__category"><a href="#0"></a></span>
                                    <h1><a href="@Url.Action("Details", "BlogPosts", new { Slug = item.Slug })" title="">@Html.DisplayFor(modelItem => item.Title)</a></h1>
                                    <div class="abstract1">
                                        @Html.DisplayFor(modelItem => item.Abstract)
                                    </div>
                                    <div>
                                        <ul class="abstract2">
                                            <li>
                                                <td>@item.Created.ToString("dddd, dd MMMM")</td><br />
                                                <td>@item.Created.ToString("yyyy HH:mm tt")</td>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </div> <!-- end entry__content -->
                        </div> <!-- end entry -->
                    }
                }

            </div>
        </div>
    </div>
</section>
<!-- end s-featured -->
<!-- s-featured
================================================== -->
<section class="s-content">
    <div class="row entries-wrap wide">
        <div class="entries">
            @foreach (var item in Model)
            {
                if (item.MediaUrl != null)
                {
                    <article class="col-block">

                        <div class="item-entry" data-aos="zoom-in">
                            <div class="item-entry__thumb">
                                <a href="single-standard.html" class="item-entry__thumb-link">
                                    <img src="@Url.Content(item.MediaUrl)"
                                         srcset="@Url.Content(item.MediaUrl)" alt="">
                                </a>
                            </div>
                            <div class="item-entry__text">
                                <th><h3><a href=@Url.Action("Details", new { slug = item.Slug })>@Html.DisplayFor(modelItem => item.Title)</a></h3></th>
                                <hr />
                                <div class="item-entry__date">
                                    <td>@item.Created.ToString("dddd, dd MMMM")</td><br />
                                    <td>@item.Created.ToString("yyyy HH:mm tt")</td>
                                </div>
                            </div>
                        </div> <!-- item-entry -->

                    </article> <!-- end article -->
                }
            }
        </div>

        <div class="row">
            @if (User.IsInRole("Admin"))
            {
                @Html.ActionLink("CREATE POST", "Create", "BlogPosts", null, new { @class = "nav-link" })
            }
        </div>
        <div class="row">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchStr = ViewBag.Search }))
        </div>
        <div class="row">
            @Html.ActionLink("Back to List", "Index")
        </div>

        <div class="row add-top-padding">
            @if (User.IsInRole("Admin"))
            {
                using (Html.BeginForm("LogOff", "Account"))
                {
                    @Html.AntiForgeryToken()
                    <button type="submit">Logout</button>
                }
            }
        </div>

    </div>

</section> <!-- end s-content -->
<!-- s-extra
================================================== -->
