@model MwangiBlogApp.Models.BlogPost

<section class="s-content s-content s-content--narrow">  
            <div class="item-entry">

                <div class="row">

                    @if (User.IsInRole("Admin"))
                    {
                        @Html.ActionLink("CREATE BLOG", "Create", "BlogPosts", null, new { @class = "nav-link" })
                    }
                    else
                    {
                        @Html.ActionLink("Login", "Login", "Account")
                    }
                    <div id="respond" class="col-full">
                        @using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>ENTER YOUR BLOG POST ENTRY BELOW</h4>

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control full-width", placeholder = "Enter a title for you blog" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

                            @Html.TextBoxFor(model => model.Abstract, new { @class = "form-control full-width", placeholder = "Enter a summarized title for your blog" })
                            @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })

                            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @id = "editor", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })

                            <div class="message form-field">
                                <input name="image" type="file" class="form-control" id="fileUpload" />
                            </div>

                            <div class="message form-field">
                                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                                @Html.EditorFor(model => model.Published)
                                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                            </div>

                            <div class="message form-field">
                                <input type="submit" value="Publish your post" class="btn btn-default" />
                            </div>

                        }
                    </div>
                    <div>
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>    
</section>
@section scripts{

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({ selector: '#editor' });
        });
    </script>

}
