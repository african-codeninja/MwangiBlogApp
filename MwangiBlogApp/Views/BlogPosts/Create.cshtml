@model MwangiBlogApp.Models.BlogPost

@{
    ViewBag.Title = "Create";
}

@*<h2>Create</h2>*@
<hr />

<div class="container">
    <div class="entries">

        <div class="row">

            <div class="item-entry" data-aos="zoom-in">
                @*<div class="item-entry__thumb">
                        <a href="single-standard.html" class="item-entry__thumb-link">
                            <img src="/images/thumbs/post/lamp-400.jpg"
                                 srcset="/images/thumbs/post/lamp-400.jpg 1x, /images/thumbs/post/lamp-800.jpg 2x" alt="">
                        </a>
                    </div>*@
                @if (User.IsInRole("Admin"))
                {
                    @Html.ActionLink("Create BlogPost", "Create", "BlogPosts", null, new { @class = "nav-link" })
                }
                else
                {
                    @Html.ActionLink("Login", "Login", "Account")
                }

                @using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <h4>BlogPost Entry</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter e-mail" } })
                                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.slug, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.slug, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.slug, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        <hr />
                        <div class="row">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = " control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @id = "editor", @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <hr />
                        <div class="block-tab-1-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="col-1-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Published)
                                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                                        <input name="image" type="file" class="form-control" id="fileUpload" />
                                    </div>
                                </div>
                            </div>
                        </div>

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-12">
                                <input type="submit" value="Publish your post" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>

            </div> <!-- item-entry -->
        </div>
    </div>
</div>

@section scripts{

    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">
        $(function () {
            tinymce.init({ selector: '#editor' });
        });
    </script>

}
